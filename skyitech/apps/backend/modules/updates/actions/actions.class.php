<?php
// auto-generated by sfPropelCrud
// date: 2009/11/13 18:39:30
?>
<?php

/**
 * updates actions.
 *
 * @package    
 * @subpackage updates
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class updatesActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('updates', 'list');
  }

  public function executeList()
  {
		$c = new Criteria();
		$c->addDescendingOrderByColumn(UpdatesPeer::CREATED_AT);

		if($this->getRequestParameter('status')=='a')
			$c->add(UpdatesPeer::STATUS, 'A');

    $pager = new sfPropelPager('Updates', 20);
    $pager->setCriteria($c);
    $pager->setPage($this->getRequestParameter('page', 1));
    $pager->init();
    $this->pager = $pager;
    $this->updatess = $pager->getResults();
  }

  public function executeShow()
  {
    $this->updates = UpdatesPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->updates);
  }

  public function executeCreate()
  {
    $this->updates = new Updates();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->updates = UpdatesPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->updates);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $updates = new Updates();
    }
    else
    {
      $updates = UpdatesPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($updates);
    }

    $updates->setId($this->getRequestParameter('id'));
    $updates->setDescription($this->getRequestParameter('description'));
    $updates->setStatus($this->getRequestParameter('status')=='A' ? 'A' : 'D');

    $updates->save();

    return $this->redirect('updates/list');
  }

  public function executeDelete()
  {
    $updates = UpdatesPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($updates);

    $updates->delete();

    return $this->redirect('updates/list');
  }
  
	public function executeEditInLine()
	{
	    //load the proper page to work with
	    $page = UpdatesPeer::retrieveByPk($this->getRequestParameter('id'));
	
	    //determine the proper get and set methods to be used
	    $set_func = 'set'.$this->getRequestParameter('attribute');
	    $get_func = 'get'.$this->getRequestParameter('attribute');
	
	    //same the current version of your page before performing the update
	    //$page->saveCurrentVersion();
	
	    //set the new value, save it and return it back for page display
	    $page->$set_func($this->getRequestParameter('value'));
	    $page->save();
	    die($page->$get_func());
	}

  public function executeActivation()
  {
  	if($this->getRequestParameter('status') == 'D')
  		$status = 'A';
  	else
  		$status = 'D';
    $c = UpdatesPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($c);
    $c->setStatus($status);
    $c->save();
  	if($this->getRequestParameter('status') == 'D')
  		echo '<a onclick="new Ajax.Updater(\'active_'.$this->getRequestParameter('id').'\', \'/mm-admin4589/updates/activation/id/'.$this->getRequestParameter('id').'/status/A\', {asynchronous:true, evalScripts:false});; return false;" href="#">Active</a>';
  	else
  		echo '<a onclick="new Ajax.Updater(\'active_'.$this->getRequestParameter('id').'\', \'/mm-admin4589/updates/activation/id/'.$this->getRequestParameter('id').'/status/D\', {asynchronous:true, evalScripts:false});; return false;" href="#">Deactive</a>';
		return sfView::NONE;
  }
  
}
